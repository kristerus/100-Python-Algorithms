Question:
A robot moves in a plane starting from the original point (0,0). The robot can move toward UP, DOWN, LEFT and RIGHT with a given steps. The trace of robot movement is shown as the following:
UP 5
DOWN 3
LEFT 3
RIGHT 2
ยก
The numbers after the direction are steps. Please write a program to compute the distance from current position after a sequence of movement and original point. If the distance is a float, then just print the nearest integer.
Example:
If the following tuples are given as input to the program:
UP 5
DOWN 3
LEFT 3
RIGHT 2
Then, the output of the program should be:
2

Hints:
In case of input data being supplied to the question, it should be assumed to be a console input.


Solution:

initialX=0
initialY=0

while True:
  inputted = input('Enter the commands for the bot as per direction: up, down, left and right.To exit press enter. ')
  if not inputted:
    break
  listed=inputted.split(" ")
  if listed[0].upper()=="UP":
    initialY+=int(listed[1])
  elif listed[0].upper()=="DOWN":
    initialY-=int(listed[1])
  elif listed[0].upper()== "LEFT":
    initialX-=int(listed[1])
  elif listed[0].upper()== "RIGHT":
    initialX+=int(listed[1])
  else:
    print("Invalid command")
if initialX==0 and initialY==0:
  print("The bot has not changed its position")
elif initialX==0 and initialY<0:
  print(f"The bot has gone {initialY} steps down.")
elif initialX==0 and initialY>0:
  print(f"The bot has gone {initialY} steps up.")
elif initialX<0 and initialY==0:
  print(f"The bot has gone {initialX} steps left.")
elif initialX>0 and initialY==0:
  print(f"The bot has gone {initialX} steps right.")
else:
  print(f"The bot has moved {initialX} steps horizontally and {initialY} steps vertically.")



